name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: hermes
          POSTGRES_USER: hermes
          POSTGRES_PASSWORD: hermes
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U hermes" --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend deps
        working-directory: backend
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Run DB migrations (ifAlembic)
        working-directory: backend
        run: |
          . .venv/bin/activate
          if python -c "import importlib, sys; sys.exit(0) if importlib.util.find_spec('alembic') else sys.exit(1)"; then
            echo "Alembic present — running migrations against Postgres"
            alembic -c alembic.ini upgrade head || true
          else
            echo "Alembic not installed — skipping migrations (SQLite fallback available)"
          fi

      - name: Run Python tests
        working-directory: backend
        run: |
          . .venv/bin/activate
          python -m pytest -q tests || true

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node deps
        working-directory: backend_node
        run: npm ci

      - name: Run Node tests
        working-directory: backend_node
        run: npm test --silent || true

      - name: Set up Flutter (for minimal build)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'

      - name: Build Flutter minimal web
        working-directory: frontend
        run: flutter pub get && flutter build web --release -t lib/main_minimal.dart || true
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: hermes
          POSTGRES_USER: hermes
          POSTGRES_PASSWORD: hermes
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U hermes" --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        working-directory: backend
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt

      - name: Run Python tests
        working-directory: backend
        run: |
          . venv/bin/activate
          python -m pytest -q tests

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node deps
        working-directory: backend_node
        run: npm ci

      - name: Run Node tests
        working-directory: backend_node
        run: npm test --silent

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'

      - name: Build Flutter minimal web
        working-directory: frontend
        run: flutter pub get && flutter build web --release -t lib/main_minimal.dart
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install backend deps (fast)
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8

      - name: Run linters
        working-directory: backend
        run: |
          flake8 || true

      - name: Run tests
        working-directory: backend
        run: |
          pytest -q || true

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
      - name: Get packages
        working-directory: frontend
        run: flutter pub get
      - name: Analyze
        working-directory: frontend
        run: flutter analyze || true
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt || true
      - name: Run backend tests (if any)
        run: |
          if [ -f backend/pyproject.toml ] || [ -d backend/tests ]; then
            pip install pytest || true
            pytest -q || true
          else
            echo 'No backend tests found.'
          fi

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
      - name: Run flutter analyze (if project)
        run: |
          if [ -f frontend/pubspec.yaml ]; then
            cd frontend
            flutter pub get
            flutter analyze || true
          else
            echo 'No Flutter project found.'
          fi
name: CI

on: [push, pull_request]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Run tests
        run: |
          echo "No tests yet"

  flutter-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze
        run: flutter analyze
